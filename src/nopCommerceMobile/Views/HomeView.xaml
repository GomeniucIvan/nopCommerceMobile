<?xml version="1.0" encoding="utf-8" ?>
<views:HomeViewXaml xmlns="http://xamarin.com/schemas/2014/forms"
              xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
              xmlns:d="http://xamarin.com/schemas/2014/forms/design"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:views="clr-namespace:nopCommerceMobile.Views;assembly=nopCommerceMobile"
              xmlns:converters="clr-namespace:nopCommerceMobile.Converters;assembly=nopCommerceMobile"
              xmlns:extensions="clr-namespace:nopCommerceMobile.Extensions;assembly=nopCommerceMobile"
              xmlns:partial="clr-namespace:nopCommerceMobile.Views.Partial;assembly=nopCommerceMobile"
              xmlns:components="clr-namespace:nopCommerceMobile.Components;assembly=nopCommerceMobile"
              xmlns:forms="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
              xmlns:pancakeView="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
              mc:Ignorable="d"
              BackgroundColor="{StaticResource PageColor}"
              x:Class="nopCommerceMobile.Views.HomeView">

    <ContentView.Resources>
        <ResourceDictionary>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"></converters:InverseBooleanConverter>
            <converters:AnyItemInListConverter x:Key="AnyItemInListConverter"></converters:AnyItemInListConverter>
            <converters:ListContainsMoreThanOneConverter x:Key="ListContainsMoreThanOneConverter"></converters:ListContainsMoreThanOneConverter>
        </ResourceDictionary>
    </ContentView.Resources>

    <StackLayout VerticalOptions="FillAndExpand">
        <ActivityIndicator IsVisible="{Binding IsDataLoaded, Converter={StaticResource InverseBooleanConverter}}" 
                               Scale="1.2"
                               Style="{StaticResource ActivityIndicatorStyle}" 
                               Color="{StaticResource PrimaryColor}" IsRunning="True"/>

        <StackLayout IsVisible="{Binding IsDataLoaded}">
            <!--Add web slider functionality TODO-->

            <!--Slider -->
            <StackLayout IsVisible="{Binding Sliders, Converter={StaticResource AnyItemInListConverter}}">
                <Grid>

                    <!--Add loop functionality, add auto change TODO-->
                    <Grid Margin="10,10,10,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="140"/>
                        </Grid.RowDefinitions>
                        <CarouselView x:Name="SliderCarouselView" ItemsSource="{Binding Sliders}" IsScrollAnimated="True">
                            <CarouselView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Frame CornerRadius="10" Padding="0">
                                            <forms:CachedImage FadeAnimationEnabled="true"
                                                               Source="{ Binding Image }"
                                                               Aspect="Fill"
                                                               Margin="0" />
                                        </Frame>

                                        <Grid.GestureRecognizers>
                                            <TapGestureRecognizer Tapped="Slider_OnClick"/>
                                        </Grid.GestureRecognizers>
                                    </Grid>
                                </DataTemplate>
                            </CarouselView.ItemTemplate>
                        </CarouselView>

                        <IndicatorView 
                            IsVisible="{Binding Sliders, Converter={StaticResource ListContainsMoreThanOneConverter}}"
                            IndicatorColor="Gray"
                            Grid.Row="0"
                            SelectedIndicatorColor="Black"
                            VerticalOptions="End"
                            Padding="0,0,0,10"
                            IndicatorSize="10" HorizontalOptions="Center"
                            IndicatorView.ItemsSourceBy="SliderCarouselView"/>
                    </Grid>
                </Grid>
            </StackLayout>

            <!--Categories -->
            <StackLayout IsVisible="{Binding Categories, Converter={StaticResource AnyItemInListConverter}}">
                <Label Style="{StaticResource ContainerLabel}" Text="{extensions:Translate Homepage.Categories}"></Label>
                <BoxView Style="{ StaticResource ContainerBoxView }"/>

                <!--//TODO find a way to implement ItemTapped event-->
                <components:ItemsViewGrid Source="{ Binding Categories }" Padding="5,0,5,0" RowSpacing="0">
                    <components:ItemsViewGrid.ItemTemplate>
                        <DataTemplate>
                            <partial:ItemViewTemplate IsProduct="False">
                                <View.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="Category_OnClick" />
                                </View.GestureRecognizers>
                            </partial:ItemViewTemplate>
                        </DataTemplate>
                    </components:ItemsViewGrid.ItemTemplate>
                </components:ItemsViewGrid>
            </StackLayout>

            <!--Products -->
            <StackLayout IsVisible="{Binding Products, Converter={StaticResource AnyItemInListConverter}}">
                <Label Style="{StaticResource ContainerLabel}" Text="{extensions:Translate Homepage.Products}"></Label>
                <BoxView Style="{ StaticResource ContainerBoxView }"/>

                <!--//TODO find a way to implement ItemTapped event-->
                <components:ItemsViewGrid Source="{ Binding Products }" Padding="5,0,5,0" RowSpacing="5">
                    <components:ItemsViewGrid.ItemTemplate>
                        <DataTemplate>
                            <partial:ItemViewTemplate IsProduct="True">
                                <View.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="Product_OnClick" />
                                </View.GestureRecognizers>
                            </partial:ItemViewTemplate>
                        </DataTemplate>
                    </components:ItemsViewGrid.ItemTemplate>
                </components:ItemsViewGrid>
            </StackLayout>

            <!--Bestsellers -->
            <StackLayout IsVisible="{Binding BestSellers, Converter={StaticResource AnyItemInListConverter}}">
                <Label Style="{StaticResource ContainerLabel}" Text="{extensions:Translate Bestsellers}"></Label>
                <BoxView Style="{ StaticResource ContainerBoxView }"/>

                <!--//TODO find a way to implement ItemTapped event-->
                <components:ItemsViewGrid Source="{ Binding BestSellers }" Padding="5,0,5,0" RowSpacing="5">
                    <components:ItemsViewGrid.ItemTemplate>
                        <DataTemplate>
                            <partial:ItemViewTemplate IsProduct="True">
                                <View.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="Product_OnClick" />
                                </View.GestureRecognizers>
                            </partial:ItemViewTemplate>
                        </DataTemplate>
                    </components:ItemsViewGrid.ItemTemplate>
                </components:ItemsViewGrid>
            </StackLayout>

            <!--News -->
            <StackLayout IsVisible="{Binding News, Converter={StaticResource AnyItemInListConverter}}">
                <Label Style="{StaticResource ContainerLabel}" Text="{extensions:Translate News}"></Label>
                <BoxView Style="{ StaticResource ContainerBoxView }"/>

                <ScrollView Orientation="Horizontal" HorizontalOptions="Fill" HorizontalScrollBarVisibility="Never" VerticalOptions="FillAndExpand" AbsoluteLayout.LayoutBounds="0,0,1,1" AbsoluteLayout.LayoutFlags="SizeProportional">
                    <FlexLayout BindableLayout.ItemsSource="{Binding News}" Direction="Row" Position="Relative" AlignItems="Start" FlowDirection="LeftToRight" JustifyContent="SpaceEvenly">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <partial:NewsViewTemplate>
                                    <View.GestureRecognizers>
                                        <TapGestureRecognizer Tapped="News_OnClick" />
                                    </View.GestureRecognizers>
                                </partial:NewsViewTemplate>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </FlexLayout>
                </ScrollView>
            </StackLayout>
        </StackLayout>
    </StackLayout>


</views:HomeViewXaml>